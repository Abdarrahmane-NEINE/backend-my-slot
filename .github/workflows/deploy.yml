name: Build and Deploy to EC2 with Docker Hub

on:
  push:
    branches: [ main ]  # Trigger the workflow on pushes to the main branch

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Log in to Docker Hub using credentials stored in GitHub Secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Ensure target directory exists with proper permissions on EC2
      - name: Ensure target directory exists
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo mkdir -p /var/www/python_project/backend_my_slot
            sudo chown $USER:$USER /var/www/python_project/backend_my_slot

      # Copy the latest docker-compose.yml to the EC2 instance
      - name: Copy docker-compose file to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.yml"
          target: "/var/www/python_project/backend_my_slot"
          overwrite: true

      # Build the Docker image and push it to Docker Hub
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: abdarrahmane/slot_calendar:latest

      # Deploy the updated image to your EC2 instance via SSH
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.8
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        with:
          host: ${{ secrets.EC2_HOST }}       # EC2 public IP or domain
          username: ${{ secrets.EC2_USER }}     # SSH username
          key: ${{ secrets.EC2_SSH_KEY }}       # private SSH key
          envs: DOCKER_USERNAME,DOCKER_PASSWORD
          script: |
            # Create or update Docker config file with login credentials
            mkdir -p ~/.docker
            echo "{\"auths\": {\"https://index.docker.io/v1/\": {\"auth\": \"$(echo -n ${DOCKER_USERNAME}:${DOCKER_PASSWORD} | base64)\"}}}" > ~/.docker/config.json
          
            # Pull the latest image from Docker Hub
            docker pull abdarrahmane/slot_calendar:latest
            
            # Directory of docker-compose.yml
            cd /var/www/python_project/backend_my_slot
            
            # Bring down the currently running containers
            docker-compose down
            
            # Start up containers using the updated image
            docker-compose up -d

            # Create staticfiles directory if not exist
            mkdir -p /var/www/python_project/backend_my_slot/staticfiles
            # add proper permissions
            sudo chown $USER:$USER /var/www/python_project/backend_my_slot/staticfiles
            
            # Copy staticfiles from the running container to the host directory
            docker cp $(docker-compose ps -q web):/app/staticfiles /var/www/python_project/backend_my_slot/staticfiles
